#!/bin/bash

# Iterate over each child directory in the current directory
for dir in */; do
  # Get the directory name without the trailing slash
  directory_name=$(basename "$dir")
  
  # Create the go.mod file inside the child directory
  cat <<EOF > "$dir/go.mod"
module github.com/illusion173/${directory_name}

go 1.23.1
EOF

  echo "go.mod created in $dir"
  
  # Change to the child directory
  cd "$dir" || continue
  
  # Run go get to install the AWS SDK
  go get github.com/aws/aws-sdk-go-v2/aws
  go get github.com/aws/aws-sdk-go-v2/config 
  go get github.com/aws/aws-sdk-go-v2/service/kms
  go get github.com/aws/aws-lambda-go/lambda
  go get github.com/aws/aws-lambda-go/events

  echo "AWS SDK installed in $dir"

  # Create the main.go file with the AWS SDK imports
  cat <<EOF > main.go
// This file is autogenerated for directory: ${directory_name}
package main

import (
    "context"
    "fmt"
    "github.com/aws/aws-sdk-go-v2/aws"
    "github.com/aws/aws-sdk-go-v2/config"
    "github.com/aws/aws-sdk-go-v2/service/kms"
	  "github.com/aws/aws-lambda-go/events"
	  "github.com/aws/aws-lambda-go/lambda"
)

func handleRequest(ctx context.Context, request events.APIGatewayProxyRequest) (events.APIGatewayProxyResponse, error) {
	fmt.Printf("Processing request data for request %s.\n", request.RequestContext.RequestID)
	fmt.Printf("Body size = %d.\n", len(request.Body))

	fmt.Println("Headers:")
	for key, value := range request.Headers {
		fmt.Printf("    %s: %s\n", key, value)
	}

	return events.APIGatewayProxyResponse{Body: request.Body, StatusCode: 200}, nil
}

func main() {
	lambda.Start(handleRequest)
}
EOF
  echo "main.go created in $dir"

  # Return to the parent directory
  cd ..
done
